<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Mensaje extends \AppBundle\Entity\Mensaje implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'mensaje', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'fecha', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'leido', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'remitente', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'eventoid', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'destinatario'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'mensaje', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'fecha', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'leido', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'remitente', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'eventoid', '' . "\0" . 'AppBundle\\Entity\\Mensaje' . "\0" . 'destinatario'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Mensaje $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMensaje($mensaje)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMensaje', [$mensaje]);

        return parent::setMensaje($mensaje);
    }

    /**
     * {@inheritDoc}
     */
    public function getMensaje()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMensaje', []);

        return parent::getMensaje();
    }

    /**
     * {@inheritDoc}
     */
    public function setFecha($fecha)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFecha', [$fecha]);

        return parent::setFecha($fecha);
    }

    /**
     * {@inheritDoc}
     */
    public function getFecha()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFecha', []);

        return parent::getFecha();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeido($leido)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeido', [$leido]);

        return parent::setLeido($leido);
    }

    /**
     * {@inheritDoc}
     */
    public function getLeido()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeido', []);

        return parent::getLeido();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemitente(\AppBundle\Entity\Usuarios $remitente = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemitente', [$remitente]);

        return parent::setRemitente($remitente);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemitente()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemitente', []);

        return parent::getRemitente();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventoid(\AppBundle\Entity\Evento $eventoid = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventoid', [$eventoid]);

        return parent::setEventoid($eventoid);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventoid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventoid', []);

        return parent::getEventoid();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestinatario(\AppBundle\Entity\Usuarios $destinatario = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestinatario', [$destinatario]);

        return parent::setDestinatario($destinatario);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestinatario()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestinatario', []);

        return parent::getDestinatario();
    }

}
